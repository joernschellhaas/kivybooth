#:kivy 1.8.0
#:import KivyLexer kivy.extras.highlight.KivyLexer
#:import Factory kivy.factory.Factory
#:import icon kivysome.icon


# Overriding and defining some Kivy classes to have uniform design

<Widget>:
    font_size: 24

<KBMenuButton@ActionButton>:
    height: 48
    markup: True

<KBScreen>:
    ScrollView:
        do_scroll_x: False
        do_scroll_y: False if root.fullscreen else (content.height > root.height - dp(16))
        AnchorLayout:
            id: content

<AnchorLayout>:
    anchor_x: 'center'
    anchor_y: 'center'
    padding: '8dp'

<KBButton@Button>:
    width: self.texture_size[0] + self.font_size
    height: self.texture_size[1] + self.font_size
    size_hint: [None, None]

<TextInput>:
    size_hint: [0.7, None]
    padding: 12
    height: self.minimum_height


BoxLayout:
    orientation: 'vertical'

    # Background
    canvas.before:
        Color:
            rgb: .6, .6, .6
        Rectangle:
            size: self.size
            source: 'res/background.png'

    ActionBar:

        ActionView:
            id: av
            ActionPrevious:
                with_previous: (False if sm.current_screen.name == 'button' else True) if sm.current_screen else False
                title: app.current_title
                on_release: app.go_hierarchy_previous()
                size_hint_y: 1

            KBMenuButton:
                text: ('%s Login' % icon('lock')) if (sm.current_screen and sm.current_screen.name == 'Welcome') else ('%s Abbrechen' % icon('times-circle'))
                on_release: app.go_to_screen("login")

    ScrollView:
        id: sv
        size_hint_y: None
        height: 0

    ScreenManager:
        id: sm
    #     on_current_screen:
    #         spnr.text = args[1].name
    #         idx = app.screen_names.index(args[1].name)
    #         if idx > -1: app.hierarchy.append(idx)
